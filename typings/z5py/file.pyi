"""
This type stub file was generated by pyright.
"""

from .group import Group

class File(Group):
    """ File to access zarr or n5 containers on disc.

    The container corresponds to a directory on the filesystem.
    Groups are subdirectories and datasets are subdirectories
    that contain multi-dimensional data stored in binary format.
    Supports python dict api.

    Args:
        path (str): path on filesystem that holds the container.
        mode (str): file mode used to open / create the file (default: 'a').
        use_zarr_format (bool): flag to determine if container is zarr or n5 (default: None).
    """
    zarr_exts = ...
    n5_exts = ...
    @classmethod
    def infer_format(cls, path):
        """ Infer the file format from the file extension.

            Returns:
                bool: `True` for zarr, `False` for n5 and `None` if the format could not be infered.
        """
        ...

    def __init__(self, path, mode=..., use_zarr_format=...) -> None:
        ...

    def close(self):
        ...

    def __enter__(self) -> "File":
        ...

    def __exit__(self, exc_type, exc_val, exc_tb):
        ...

    @property
    def filename(self):
        ...

    @property
    def name(self):
        ...



class N5File(File):
    """ File to access n5 containers on disc.

    Args:
        path (str): path on filesystem that holds the container.
        mode (str): file mode used to open / create the file (default: 'a').
    """
    def __init__(self, path, mode=...) -> None:
        ...



class ZarrFile(File):
    """ File to access zarr containers on disc.

    Args:
        path (str): path on filesystem that holds the container.
        mode (str): file mode used to open / create the file (default: 'a').
    """
    def __init__(self, path, mode=...) -> None:
        ...



class S3File(Group):
    """ File to access zarr/n5 file in AWS S3 bucket.

    Args:
    """
    def __init__(self, bucket_name, name_in_bucket=..., mode=..., use_zarr_format=...) -> None:
        ...
