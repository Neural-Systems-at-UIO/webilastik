import Boost.Python
convOpts: Any
convolutionOptions: Any
gaussianGradient: Any
gaussianGradientMagnitude: Any
gaussianSmooth: Any
hessianOfGaussianEigenvalues: Any
hessianOfGaussianFirstEigenvalue: Any
hessianOfGaussianLastEigenvalue: Any

def _gaussianGradient(*args, **kwargs) -> Any: ...
def _gaussianGradientMagnitude(*args, **kwargs) -> Any: ...
def _gaussianSmooth(*args, **kwargs) -> Any: ...
def _hessianOfGaussianEigenvalues(*args, **kwargs) -> Any: ...
def _hessianOfGaussianFirstEigenvalue(*args, **kwargs) -> Any: ...
def _hessianOfGaussianLastEigenvalue(*args, **kwargs) -> Any: ...

class Blocking2D(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def intersectingBlocks(self, *args, **kwargs) -> Any: ...
    @classmethod
    def __getitem__(self, index) -> Any: ...
    @classmethod
    def __len__(self) -> Any: ...
    @classmethod
    def __reduce__(self) -> Any: ...

class Blocking2DBlock(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def begin(self) -> Any: ...
    @property
    def end(self) -> Any: ...
    @property
    def shape(self) -> Any: ...

class Blocking3D(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def intersectingBlocks(self, *args, **kwargs) -> Any: ...
    @classmethod
    def __getitem__(self, index) -> Any: ...
    @classmethod
    def __len__(self) -> Any: ...
    @classmethod
    def __reduce__(self) -> Any: ...

class Blocking3DBlock(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def begin(self) -> Any: ...
    @property
    def end(self) -> Any: ...
    @property
    def shape(self) -> Any: ...

class BlockwiseConvolutionOptions2D(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def blockShape(self) -> Any: ...
    @blockShape.setter
    def blockShape(self, val: Any) -> None: ...
    @property
    def innerScale(self) -> Any: ...
    @innerScale.setter
    def innerScale(self, val: Any) -> None: ...
    @property
    def numThreads(self) -> Any: ...
    @numThreads.setter
    def numThreads(self, val: Any) -> None: ...
    @property
    def outerScale(self) -> Any: ...
    @outerScale.setter
    def outerScale(self, val: Any) -> None: ...
    @property
    def stdDev(self) -> Any: ...
    @stdDev.setter
    def stdDev(self, val: Any) -> None: ...

class BlockwiseConvolutionOptions3D(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def blockShape(self) -> Any: ...
    @blockShape.setter
    def blockShape(self, val: Any) -> None: ...
    @property
    def innerScale(self) -> Any: ...
    @innerScale.setter
    def innerScale(self, val: Any) -> None: ...
    @property
    def numThreads(self) -> Any: ...
    @numThreads.setter
    def numThreads(self, val: Any) -> None: ...
    @property
    def outerScale(self) -> Any: ...
    @outerScale.setter
    def outerScale(self, val: Any) -> None: ...
    @property
    def stdDev(self) -> Any: ...
    @stdDev.setter
    def stdDev(self, val: Any) -> None: ...

class BlockwiseConvolutionOptions4D(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def blockShape(self) -> Any: ...
    @blockShape.setter
    def blockShape(self, val: Any) -> None: ...
    @property
    def innerScale(self) -> Any: ...
    @innerScale.setter
    def innerScale(self, val: Any) -> None: ...
    @property
    def numThreads(self) -> Any: ...
    @numThreads.setter
    def numThreads(self, val: Any) -> None: ...
    @property
    def outerScale(self) -> Any: ...
    @outerScale.setter
    def outerScale(self, val: Any) -> None: ...
    @property
    def stdDev(self) -> Any: ...
    @stdDev.setter
    def stdDev(self, val: Any) -> None: ...
