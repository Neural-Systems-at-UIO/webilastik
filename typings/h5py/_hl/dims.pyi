"""
This type stub file was generated by pyright.
"""

from . import base
from .base import with_phil

"""
    Implements support for HDF5 dimension scales.
"""
class DimensionProxy(base.CommonStateObject):
    """
        Represents an HDF5 "dimension".
    """
    @property
    @with_phil
    def label(self):
        """ Get or set the dimension scale label """
        ...
    
    @label.setter
    @with_phil
    def label(self, val):
        ...
    
    @with_phil
    def __init__(self, id_, dimension):
        ...
    
    @with_phil
    def __hash__(self):
        ...
    
    @with_phil
    def __eq__(self, other):
        ...
    
    @with_phil
    def __iter__(self):
        ...
    
    @with_phil
    def __len__(self):
        ...
    
    @with_phil
    def __getitem__(self, item):
        ...
    
    def attach_scale(self, dset):
        """ Attach a scale to this dimension.

        Provide the Dataset of the scale you would like to attach.
        """
        ...
    
    def detach_scale(self, dset):
        """ Remove a scale from this dimension.

        Provide the Dataset of the scale you would like to remove.
        """
        ...
    
    def items(self):
        """ Get a list of (name, Dataset) pairs with all scales on this
        dimension.
        """
        ...
    
    def keys(self):
        """ Get a list of names for the scales on this dimension. """
        ...
    
    def values(self):
        """ Get a list of Dataset for scales on this dimension. """
        ...
    
    @with_phil
    def __repr__(self):
        ...
    


class DimensionManager(base.MappingHDF5, base.CommonStateObject):
    """
        Represents a collection of dimension associated with a dataset.

        Like AttributeManager, an instance of this class is returned when
        accessing the ".dims" property on a Dataset.
    """
    @with_phil
    def __init__(self, parent):
        """ Private constructor.
        """
        ...
    
    @with_phil
    def __getitem__(self, index):
        """ Return a Dimension object
        """
        ...
    
    @with_phil
    def __len__(self):
        """ Number of dimensions associated with the dataset. """
        ...
    
    @with_phil
    def __iter__(self):
        """ Iterate over the dimensions. """
        ...
    
    @with_phil
    def __repr__(self):
        ...
    
    def create_scale(self, dset, name=...):
        """ Create a new dimension, from an initial scale.

        Provide the dataset and a name for the scale.
        """
        ...
    


